<!-- استایل Leaflet -->
<link rel="stylesheet" href="/css/leaflet.css" />

<style>
  body {
    font-family: Arial, sans-serif;
    direction: rtl;
    text-align: right;
    padding: 20px;
  }
  #map {
    width: 100%;
    height: 80vh;
    margin-top: 10px;
    border: 1px solid #ccc;
    border-radius: 10px;
  }
  .date-range {
    margin-bottom: 10px;
  }
  button {
    background-color: #007bff;
    color: white;
    padding: 5px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  button:hover {
    background-color: #0056b3;
  }
</style>


<h2>گزارش مسیر حرکت</h2>

<div class="date-range">
  <label for="startDate">از تاریخ:</label>
  <input type="date" id="startDate">
  <label for="startTime">از ساعت:</label>
  <input type="time" id="startTime">

  <label for="endDate">تا تاریخ:</label>
  <input type="date" id="endDate">
  <label for="endTime">تا ساعت:</label>
  <input type="time" id="endTime">

  <button onclick="drawRoute()">نمایش مسیر</button>
</div>

<div id="map"></div>

<!-- اسکریپت Leaflet -->
<script src="/js/leaflet.js"></script>

<script>
  // مقداردهی اولیه نقشه
  const map = L.map("map").setView([34.350, 47.120], 13);

  // اضافه کردن لایه نقشه OpenStreetMap
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  // آیکون سفارشی
  const customIcon = L.icon({
    iconUrl: "/fireimg.png", // مسیر تصویر آیکون
    iconSize: [32, 32],
    iconAnchor: [16, 16],
    popupAnchor: [0, -16]
  });

  async function getGPSData(start, end) {
    try {
      const response = await fetch(`/gps/gps-report-data?startDate=${encodeURIComponent(start)}&endDate=${encodeURIComponent(end)}`);
      const data = await response.json();
      return data.data || []; // اطمینان از اینکه داده‌ها وجود دارند
    } catch (error) {
      console.error("خطا در دریافت داده‌های GPS:", error);
      return [];
    }
  }

  async function drawRoute() {
    // مقداردهی صحیح متغیرها
    const startDate = document.getElementById("startDate")?.value;
    const startTime = document.getElementById("startTime")?.value;
    const endDate = document.getElementById("endDate")?.value;
    const endTime = document.getElementById("endTime")?.value;

    // بررسی مقداردهی
    if (!startDate || !startTime || !endDate || !endTime) {
        alert("لطفا تاریخ و ساعت شروع و پایان را وارد کنید");
        return;
    }

    // ترکیب تاریخ و ساعت به فرمت استاندارد
    const fullStartDate = `${startDate}T${startTime}:00.000Z`;
    const fullEndDate = `${endDate}T${endTime}:00.000Z`;

    console.log(`درخواست داده‌های GPS از ${fullStartDate} تا ${fullEndDate}`);

    try {
        const gpsData = await getGPSData(fullStartDate, fullEndDate);
        console.log(gpsData);
        
        if (!gpsData || gpsData.length === 0) {
            alert("هیچ داده‌ای برای این بازه زمانی یافت نشد!");
            return;
        }

        // رسم مسیر روی نقشه
        const latLngs = gpsData.map(point => [point.latitude, point.longitude]);

        // حذف مسیر قبلی از نقشه
        map.eachLayer(layer => {
            if (layer instanceof L.Polyline || layer instanceof L.Marker) {
                map.removeLayer(layer);
            }
        });

        // رسم مسیر روی نقشه
        L.polyline(latLngs, { color: 'blue' }).addTo(map);

        // اضافه کردن مارکر با آیکون سفارشی در هر نقطه از مسیر
        latLngs.forEach(coord => {
            L.marker(coord, { icon: customIcon }).addTo(map);
        });

        // مرکز نقشه را به اولین نقطه حرکت تنظیم کن
        map.setView(latLngs[0], 14);
    } catch (error) {
        console.error("خطا در دریافت داده‌های GPS:", error);
    }
}
</script>

